<a:application xmlns:a="http://ajax.org/2005/aml">
    <a:state id="stateTestRunJasmine" />
    <a:menu id="menuRunSettingsJasmine" />

    <a:window id="windowTestPanelJasmine" 
      flex     = "1" 
      skin     = "fm-window" 
      title    = "Jasmine" 
      modal    = "false" 
      buttons  = "close" 
      minwidth = "200"
      optimize = "true">
        <a:bar skin="c9-header-bar" top="-30" right="28" height="30">
            <a:hbox id="barTestToolsJasmine" class="testPanelControls">
                <a:checkbox id="showLiveCoffeeOutputForJasmine">show translated JS</a:checkbox>
                <a:button 
                  id="buttonTestRunJasmine"
                  caption  = "Run tests"
                  onclick  = "require('ext/jasmine/jasmine').run(dataGridTestProjectJasmine.getSelection());"
                  skin     = "c9-toolbarbutton-light"
                  class    = "with-arrow"
                  visible  = "true" />
            </a:hbox>
        </a:bar>
        <a:vbox anchors = "0 0 0 0" id="vboxTestPanelJasmine" style="background:#333">
            <a:model id="modelTestsJasmine">
                <data>
                    <repo name="Your Project"/>
                </data>
            </a:model>
            <a:bar skin="basic" flex="1">
                <a:datagrid 
                  id        = "dataGridTestProjectJasmine"
                  anchors   = "0 0 0 0"
                  border    = "0"
                  options   = "size"
                  model     = "modelTestsJasmine"
                  each      = "[repo|file|passed|failed]"
                  class     = "noscrollbar with-noise"
                  scrollbar = "sbShared 20 2 2"
                  multiselect    = "true"
                  startcollapsed = "true"
                  contextmenu    = "menuTestContextJasmine"
                  empty-message  = "No tests yet"
                  onbeforeremove = "return require('core/util').removeInteractive(this)">
                    <a:column id="columnTestProjectJasmine" caption="Name" width="60%" tree="1" icon="{require('ext/testpanel/testpanel').getIcon(localName(), [@status], [@type])}"><?lm
                        if (localName() == "error")
                            <span style='color:red'>[@name]</span>
                        else
                            [@name]
                    ?></a:column>
                    <a:column caption="Status" width="41%"><?lm
                        if ([@status] === '0')
                            <span style='color:red' errorFilePath='[@errorFilePath]' errorLine='[@errorLine]' errorRow='[@errorRow]'>\[[@status-message]\]</span>
                        else if ([@status] == '1')
                            <span style='color:green'>\[PASS{[@status-message] and " [@status-message]"}\]</span>
                        else if ([@status] == '-1')
                            <span>\[{[@status-message].uCaseFirst()}\]</span>
                        else                            
                            '';
                    ?></a:column>
                    <!-- 'expanded' defines which elements should be expanded when the grid is loaded-->
                    <a:expanded match="{apf.getChildNumber(%[repo]) == 1}" /> <!-- only the repo is expanded -->
                </a:datagrid>
            </a:bar>
            
            <!--
                @todo Edit could be test/assert
                      Remove could be test and assert
            -->
            <a:menu id="menuTestContextJasmine">
                <a:item match="[file|repo[file]]" onclick="require('ext/jasmine/jasmine').run(dataGridTestProjectJasmine.getSelection())">Run Tests</a:item>
                <a:item match="[file]" 
                  onclick="var ide = require('core/ide');ide.dispatchEvent('openfile', {doc: ide.createDocument(dataGridTestProjectJasmine.selected)});">Edit</a:item>
                <a:divider />
                <a:item match="[file]" onclick="
                    require('ext/tabbehaviors/tabbehaviors').revealInTree(dataGridTestProjectJasmine.selected);
                ">Show in File Tree</a:item>
                <a:item match="[failed]" onclick="require('ext/jasmine/jasmine').goToCoffee(dataGridTestProjectJasmine.getSelection()[0])">Show Error in Coffee</a:item>
            </a:menu>
        </a:vbox>
    </a:window>
</a:application>
